let imgBase64 = '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'
imgBase64 = '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'
let { config } = require('../config.js')(runtime, this)
let singletonRequire = require('../lib/SingletonRequirer.js')(runtime, this)
config.save_log_file = false
config.show_debug_log = true
let _commonFunctions = singletonRequire('CommonFunction')
let resourceMonitor = require('../lib/ResourceMonitor.js')(runtime, global)
let { logInfo, errorInfo, warnInfo, debugInfo, infoLog } = singletonRequire('LogUtils')
let FloatyInstance = singletonRequire('FloatyUtil')
let paddleOcr = singletonRequire('PaddleOcrUtil')
let mlkitOcr = singletonRequire('MlkitOcrUtil')


let img = images.fromBase64(imgBase64)
// img = images.inRange(img, '#888888', '#FFFFFF')
debugInfo(['处理后图片：data:image/png;base64,{}', images.toBase64(img)])
// img = images.grayscale(img)
let result = ''
let start = new Date()
result = paddleOcr.recognize(img)
debugInfo(['paddle ocr 识别耗时：{}ms, 结果：{}', (new Date() - start), result])
start = new Date()
result = mlkitOcr.recognize(img)
debugInfo(['mlkit ocr 识别耗时：{}ms, 结果：{}', (new Date() - start), result])

console.show()

setTimeout(() => {
  console.hide()
}, 15000)